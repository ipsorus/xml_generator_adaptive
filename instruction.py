# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'instruction.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(626, 582)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Form.sizePolicy().hasHeightForWidth())
        Form.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/file_xml-512.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setAutoFillBackground(True)
        self.widget.setObjectName("widget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.listWidget = QtWidgets.QListWidget(self.widget)
        self.listWidget.setMinimumSize(QtCore.QSize(590, 500))
        self.listWidget.setMaximumSize(QtCore.QSize(960, 1080))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.listWidget.setFont(font)
        self.listWidget.setMouseTracking(True)
        self.listWidget.setTabletTracking(False)
        self.listWidget.setFocusPolicy(QtCore.Qt.NoFocus)
        self.listWidget.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.listWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.listWidget.setLineWidth(1)
        self.listWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.listWidget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.listWidget.setAutoScroll(False)
        self.listWidget.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.listWidget.setProperty("showDropIndicator", False)
        self.listWidget.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)
        self.listWidget.setTextElideMode(QtCore.Qt.ElideLeft)
        self.listWidget.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.listWidget.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.listWidget.setProperty("isWrapping", False)
        self.listWidget.setResizeMode(QtWidgets.QListView.Adjust)
        self.listWidget.setViewMode(QtWidgets.QListView.ListMode)
        self.listWidget.setWordWrap(True)
        self.listWidget.setSelectionRectVisible(False)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setUnderline(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.gridLayout_2.addWidget(self.listWidget, 0, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setMinimumSize(QtCore.QSize(0, 30))
        self.pushButton.setMaximumSize(QtCore.QSize(16777215, 30))
        self.pushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_2.addWidget(self.pushButton, 1, 0, 1, 1)
        self.gridLayout.addWidget(self.widget, 0, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        item = self.listWidget.item(1)
        item.setText(_translate("Form", "Краткая инструкция"))
        item = self.listWidget.item(3)
        item.setText(_translate("Form", "Предупреждение:"))
        item = self.listWidget.item(4)
        item.setText(_translate("Form", "Объем xml-файла, загружаемого в модуль \"Поверки\", не должен превышать объем, равный 5 МБ."))
        item = self.listWidget.item(5)
        item.setText(_translate("Form", "При формировании xml-файла в программе следует учитывать, что итоговый размер файла зависит не только от количества записей в одном xml-файле, а также от количества вносимой информации в одной записи о поверке СИ."))
        item = self.listWidget.item(6)
        item.setText(_translate("Form", "Сгенерированному xml-файлу с записями автоматически присваивается наименование, в котором содержатся: дата и время, наименование типа СИ,  порядковый номер заявки (part), количество записей в заявке (notes) и условный шифр знака поверки (cifer)."))
        item = self.listWidget.item(7)
        item.setText(_translate("Form", "Сформированные файлы по структуре отвечают требованиям схемы импорта. За корректность сведений в сформированных xml-файлах ответственность несет лицо,  вносившее сведения."))
        item = self.listWidget.item(9)
        item.setText(_translate("Form", "Рекомендации по заполнению формы:"))
        item = self.listWidget.item(10)
        item.setText(_translate("Form", "1. В поле \"Всего СИ в партии\" указывается общее количество СИ в партии, для которых создаются записи о поверке."))
        item = self.listWidget.item(11)
        item.setText(_translate("Form", "2. В поле \"Поверок в одном файле\" указывается количество записей, которое будет сформировано в однм xml-файле (не более 5000 записей)."))
        item = self.listWidget.item(12)
        item.setText(_translate("Form", "============================================================================================="))
        item = self.listWidget.item(13)
        item.setText(_translate("Form", "Пример: пользователю необходимо внести сведения о 13000 шт. средств измерений, чтобы в одной заявке содержались сведения о 3000 СИ."))
        item = self.listWidget.item(14)
        item.setText(_translate("Form", "Пользователь в поле \"Всего СИ в партии\" указывает 13000, а в поле \"Поверок в одном файле\" указывает 3000."))
        item = self.listWidget.item(15)
        item.setText(_translate("Form", "В результате, после нажатия кнопки \"Создать xml-файл\", сформируется 5 xml-файлов, 4 файла будут содержать по 3000 записей, 5-й файл - 1000 записей."))
        item = self.listWidget.item(16)
        item.setText(_translate("Form", "============================================================================================="))
        item = self.listWidget.item(17)
        item.setText(_translate("Form", "3. Далее необходимо заполнить все обязательные поля, находящиеся во вкладках \"Сведения о СИ\", \"Сведения о поверке\", \"Средства поверки\", \"Прочие сведения\"."))
        item = self.listWidget.item(18)
        item.setText(_translate("Form", "3.1. Вкладка \"Сведения о СИ\"."))
        item = self.listWidget.item(19)
        item.setText(_translate("Form", "    а. Заполнить обязательное поле Тип СИ (Метрологическая аттестация, СИ ВН или СН), подробнее в примечании ниже;"))
        item = self.listWidget.item(20)
        item.setText(_translate("Form", "    б. Указать модификацию СИ (если нет информации о модификации, нужно указать \"Нет\", \"Модификации нет\" или что-то подобное);"))
        item = self.listWidget.item(21)
        item.setText(_translate("Form", "    в. Заполнить поле \"Заводской номер/Буквенно-цифровое обозначение\" (пример ниже):"))
        item = self.listWidget.item(22)
        item.setText(_translate("Form", "============================================================================================="))
        item = self.listWidget.item(23)
        item.setText(_translate("Form", "Пример: пользователю необходимо внести сведения о партии СИ в количестве 1000 шт. Диапазон заводских номеров начинается с заводского номера А102-Б/Е-000001/2020 и заканчивается номером А102-Б/Е-001000/2020. Изменяемая часть в этом примере является 000001. Также в примере есть неизменяемая часть номера: \"А102-Б/Е-\", данная часть указывается в поле \"Начало номера до изменяемой части\" и \"/2020\" - эта часть (окончание номера) указывается в поле \"Конец номера после изменяемой части\". После заполнения у пользователя должно получится следующее: \"А102-Б/Е-\"  \"000001\"   \"/2020\". Важное замечание: поле \"Изменяемая часть номера\" может содержать только числовые значения (возможно указание числа с ведущими нулям, как в примере). "))
        item = self.listWidget.item(24)
        item.setText(_translate("Form", "============================================================================================="))
        item = self.listWidget.item(25)
        item.setText(_translate("Form", "Примечание: для внесения сведений о единственном СИ, необходимо выбрать одну из трех опций:\n"
"− «Тип СИ» для внесения сведений о результатах поверки СИ утвержденного типа, при заполнении поля в данном случае выбирается значение из реестра утвержденных типов СИ ФИФ ОЕИ.\n"
"− «Метрологическая аттестация» для внесения сведений о результатах поверки средства измерений неутвержденного типа, но прошедшего метрологическую аттестацию в соответствии с ГОСТ 8.326-89 «Государственная система обеспечения единства измерений (ГСИ). Метрологическая аттестация средств измерений», в рамках которой на данное СИ была утверждена Методика метрологической аттестации, при заполнении поля в данном случае указывается наименование СИ.\n"
"− «СИ ВН или СН» для внесения сведений о результатах поверки средства измерений военного назначения или специального назначения, при заполнении поля в данном случае указывается наименование типа СИ, а также номер в реестре утвержденных типов СИ раздела ФИФ ОЕИ в области обороны и безопасности государства."))
        item = self.listWidget.item(26)
        item.setText(_translate("Form", "3.2. Вкладка \"Сведения о поверке\"."))
        item = self.listWidget.item(27)
        item.setText(_translate("Form", "    а. Указать в поле \"Дата поверки\" нужную дату, нажав на поле ввода для вызова календаря;"))
        item = self.listWidget.item(28)
        item.setText(_translate("Form", "    б. При необходимости можно заполнить поле \"Действительна до\" (необязательно поле), для этого также нужно нажать на поле ввода для вызова календаря. Важное замечание: дата в поле \"Дата поверки\" не должна быть большей или равной дате, указанной в поле \"Действительна до\";"))
        item = self.listWidget.item(29)
        item.setText(_translate("Form", "    в. Обязательно указать в поле \"Условный шифр знака поверки организации-поверителя\" значение шифра организации, от имени которой публикуются сведения из формируемой заявки (ввод на русском языке);"))
        item = self.listWidget.item(30)
        item.setText(_translate("Form", "    г. Заполнить поле \"Владелец СИ\" (обязательное поле);"))
        item = self.listWidget.item(31)
        item.setText(_translate("Form", "    д. Указать наименование методики поверки, в соответствии с которой проводится поверка СИ, не более 128 символов (обязательно поле);"))
        item = self.listWidget.item(32)
        item.setText(_translate("Form", "    е. Если имеется необходимость указывать знак поверки на СИ или в паспорте на СИ, нужно проставить галки в соответствующих пунктах (необязательно);"))
        item = self.listWidget.item(33)
        item.setText(_translate("Form", "   ж. Выбрать тип поверки;"))
        item = self.listWidget.item(34)
        item.setText(_translate("Form", "    з. При необходимости указать об использовании результатов калибровки;"))
        item = self.listWidget.item(35)
        item.setText(_translate("Form", "    и. Если по результатам проведения поверки СИ признано непригодным, выбрать пункт \"Непригодно\" и указать причину непригодности (обязательное поле);"))
        item = self.listWidget.item(36)
        item.setText(_translate("Form", "3.3. Вкладка \"Средства поверки\"."))
        item = self.listWidget.item(37)
        item.setText(_translate("Form", "    а. Обязательно заполнить хотя бы одно из полей, указав одно из средств поверки: номер ГПЭ/ номер эталона/ СО, применяемые при поверке/ СИ, применяемые в качестве эталона/ СИ, применяемое при поверке / Вещество (материал);"))
        item = self.listWidget.item(38)
        item.setText(_translate("Form", "    б. В случае проведения поверки без применения средств поверки, необходимо выбрать один из методов поверки из выпадающего списка."))
        item = self.listWidget.item(39)
        item.setText(_translate("Form", "        При этом заполнение других полей будет недоступно. Чтобы активировать возможность внесения средств поверки в другие поля, необходимо в выпадающем списке \"Методы поверки без применения средств поверки\" выбрать пустую строку (первая строка в выпадающем списке)."))
        item = self.listWidget.item(40)
        item.setText(_translate("Form", "        Для внесения нескольких средств поверки в поля \"Государственный первичный эталон\", \"Эталон единицы величины\", \"СИ, применяемое в качестве эталона\", \"Вещество (материал), применяемое при поверке\", необходимо разделять записи символом \";\" (точка с запятой)."))
        item = self.listWidget.item(41)
        item.setText(_translate("Form", "        При заполнении полей \"Стандартные образцы, применяемые при поверке\" и \"СИ, применяемые при поверке\" для добавления нескольких средств поверки нужно добавить вкладки, нажав кнопку \"Добавить\" и заполнить нужные поля."))
        item = self.listWidget.item(42)
        item.setText(_translate("Form", "3.4. Вкладка \" Прочие сведения\"."))
        item = self.listWidget.item(43)
        item.setText(_translate("Form", "    а. Обязательно заполнить поля в разделе \"Условия проведения поверки\" (обязательные поля)."))
        item = self.listWidget.item(44)
        item.setText(_translate("Form", "    б. При проведении поверки в сокращенном объеме, нужно установить галку на пункте \"Поверка в сокращенном объеме\" и заполнить поле \"Краткая характеристика объема поверки\"."))
        item = self.listWidget.item(45)
        item.setText(_translate("Form", "     в. Остальные поля заполняются по необходимости. "))
        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.pushButton.setText(_translate("Form", "Закрыть"))

import res_rc
